/* ────────────────────────────────────────────────────────────────
   File: src/lib/db.ts
   Responsibility: Initialise (and, in dev, re‑use) a single
   Drizzle ORM client that talks to your Supabase Postgres cluster.
   ──────────────────────────────────────────────────────────────── */

   import { drizzle }          from 'drizzle-orm/postgres-js';
   import postgres, { Sql }    from 'postgres';
   import * as schema          from '@/db/schema';  // generated by drizzle‑kit
   import 'dotenv/config';                          // load .env locally
   
   /*-----------------------------------------------------------------
    * 1. Environment guard
    *----------------------------------------------------------------*/
   const DATABASE_URL = process.env.DATABASE_URL;
   if (!DATABASE_URL) {
     throw new Error(
       '❌  DATABASE_URL env‑var is missing.\n' +
       '    Copy the connection string from Supabase → Settings → Database\n' +
       '    and paste it into .env (see example below).',
     );
   }
   
   /*-----------------------------------------------------------------
    * 2. Low‑level postgres‑js client
    *----------------------------------------------------------------*/
   const pgClient: Sql =
     // During development, reuse the same client across hot reloads.
     (global as any).__pgclient__ ??
     postgres(DATABASE_URL, {
       ssl: 'require',  // Supabase requires SSL in prod _and_ dev
       max: 1,          // safe for serverless; raise if you run an API
     });
   
   /*-----------------------------------------------------------------
    * 3. High‑level Drizzle wrapper
    *----------------------------------------------------------------*/
   export const db =
     (global as any).__drizzle__ ??
     drizzle(pgClient, {
       schema,
       logger: process.env.NODE_ENV === 'development',
     });
   
   /*-----------------------------------------------------------------
    * 4. Hot‑module‑reloading guards (dev only)
    *----------------------------------------------------------------*/
   if (process.env.NODE_ENV !== 'production') {
     (global as any).__pgclient__ = pgClient;
     (global as any).__drizzle__  = db;
   }
   